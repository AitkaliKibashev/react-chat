{"version":3,"sources":["utils/consts.js","components/Navbar.js","components/Login.js","components/Loader.js","components/Chat.js","routes.js","components/AppRouter.js","App.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Navbar","auth","useContext","Context","useAuthState","user","AppBar","position","Toolbar","Typography","variant","Grid","container","justifyContent","to","style","textDecoration","Button","onClick","a","signOut","color","Login","login","provider","firebase","GoogleAuthProvider","signInWithPopup","console","log","Container","height","window","innerHeight","alignItems","width","background","Box","p","Loader","CircularProgress","withRouter","match","useState","messageValue","setMessageValue","roomValue","setRoomValue","firestore","roomId","params","useCollectionData","collection","orderBy","messages","rooms","marginTop","className","flex","map","r","id","name","TextField","value","onChange","e","target","rowsMax","label","add","Math","floor","random","createdAt","FieldValue","serverTimestamp","m","uid","Avatar","src","photoURL","marginRight","displayName","text","publicRoutes","path","Component","privateRoutes","Chat","AppRouter","component","exact","App","loader","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.6bb12087.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login'\r\nexport const CHAT_ROUTE = '/chat/:roomId?'\r\n","import React, {useContext} from 'react'\r\nimport {AppBar, Button, Grid, Toolbar, Typography} from \"@material-ui/core\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE} from \"../utils/consts\";\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst Navbar = () => {\r\n    const {auth} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\">\r\n                    {user ? 'Chat' : 'Home'}\r\n                </Typography>\r\n                <Grid container justifyContent={'flex-end'}>\r\n                    {user ?\r\n                        <NavLink to={LOGIN_ROUTE} style={{textDecoration: 'none'}}>\r\n                            <Button onClick={async () => await auth.signOut() } variant={'contained'} color={'secondary'}>\r\n                                Logout\r\n                            </Button>\r\n                        </NavLink>\r\n                    :\r\n                        <NavLink to={LOGIN_ROUTE} style={{textDecoration: 'none'}}>\r\n                            <Button variant={'contained'} color={'secondary'}>\r\n                                Login\r\n                            </Button>\r\n                        </NavLink>\r\n                    }\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useContext} from 'react'\r\nimport {Box, Button, Container, Grid} from \"@material-ui/core\";\r\nimport {Context} from \"../index\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Login = () => {\r\n    const {auth} = useContext(Context)\r\n\r\n    const login = async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider()\r\n        const {user} = await auth.signInWithPopup(provider)\r\n        console.log(user)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                  style={{height: window.innerHeight - 65}}\r\n                  alignItems={'center'}\r\n                  justifyContent={'center'}\r\n            >\r\n                <Grid style={{width: 400, background: 'lightgray'}} container justifyContent={'center'} alignItems={'center'}>\r\n                    <Box p={5}>\r\n                        <Button onClick={login} variant={'outlined'}>Login with Google</Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport {CircularProgress, Container, Grid} from \"@material-ui/core\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                  style={{height: window.innerHeight}}\r\n                  alignItems={'center'}\r\n                  justifyContent={'center'}\r\n            >\r\n                <Grid container justifyContent={'center'} alignItems={'center'}>\r\n                    <CircularProgress />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, {useContext, useState} from 'react'\r\nimport {Avatar, Button, Container, Grid, TextField} from \"@material-ui/core\"\r\nimport '../App.css'\r\nimport {Context} from \"../index\"\r\nimport firebase from \"firebase\"\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\"\r\nimport Loader from \"./Loader\"\r\nimport {useAuthState} from \"react-firebase-hooks/auth\"\r\nimport {NavLink, withRouter} from \"react-router-dom\"\r\n\r\nconst Chat = ({match}) => {\r\n    const [messageValue, setMessageValue] = useState('')\r\n    const [roomValue, setRoomValue] = useState('')\r\n    const {auth, firestore} = useContext(Context)\r\n\r\n    const [user] = useAuthState(auth)\r\n    const roomId = match.params.roomId\r\n\r\n    const [messages] = useCollectionData(firestore.collection('messages').orderBy('createdAt'))\r\n    const [rooms, loading] = useCollectionData(firestore.collection('rooms').orderBy('createdAt'))\r\n\r\n    const sendMessage = () => {\r\n        firestore.collection('messages').add({\r\n            roomId: roomId,\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n            text: messageValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setMessageValue('')\r\n    }\r\n\r\n    const createRoom = () => {\r\n        firestore.collection('rooms').add({\r\n            id: Math.floor(Math.random()*1000),\r\n            name: roomValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setRoomValue('')\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 style={{marginTop: 10}}>Welcome to the my fucking CHAT</h1>\r\n            <div className={'chat-row'}>\r\n                <div style={{flex: 1}} className={'chat-row__chat-list'}>\r\n                    <h1>Rooms</h1>\r\n                    <div style={{flex: 1}}>\r\n                        {rooms.map(r =>\r\n                            <NavLink style={{textDecoration: 'none'}} to={'/chat/' + r.id}>\r\n                                <p className={'chat-row__chat-list__item'}>{r.name}</p>\r\n                            </NavLink>\r\n                        )}\r\n                    </div>\r\n                    <div className={'chat-row__chat-list__footer'}>\r\n                        <TextField\r\n                            value={roomValue}\r\n                            onChange={(e) => setRoomValue(e.target.value)}\r\n                            rowsMax={2}\r\n                            variant={'outlined'}\r\n                            color={'secondary'}\r\n                            label=\"Room name\"\r\n                            style={{width: '65%'}}\r\n                        />\r\n                        <Button onClick={createRoom} variant={'outlined'} color={'secondary'}>Create</Button>\r\n                    </div>\r\n                </div>\r\n                <div className={'chat-row__chat-window'}>\r\n                    <div className={'chat-row__chat-window__chat'}>\r\n                        {messages.map(m =>\r\n                            roomId === m.roomId ?\r\n                            <div className={m.uid === user.uid ? 'chat-row__chat-window__user-message-me': 'chat-row__chat-window__user-message-other'}>\r\n                                <Grid container alignItems={'center'}>\r\n                                    <Avatar src={m.photoURL} style={{marginRight: 10}}/>\r\n                                    <p>{m.displayName}</p>\r\n                                </Grid>\r\n                                <p style={{marginTop: 5}}>{m.text}</p>\r\n                            </div> : null\r\n                        )}\r\n                    </div>\r\n                    {roomId ?\r\n                        <div className={'chat-row__chat-window__footer'}>\r\n                            <TextField\r\n                                value={messageValue}\r\n                                onChange={(e) => setMessageValue(e.target.value)}\r\n                                rowsMax={2}\r\n                                variant={'outlined'}\r\n                                label={\"Your text\"}\r\n                                style={{width: '90%'}}\r\n                            />\r\n                            <Button onClick={sendMessage} variant={'outlined'} color={'secondary'}>Send</Button>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(Chat)\r\n","import {CHAT_ROUTE, HOME_ROUTE, LOGIN_ROUTE} from \"./utils/consts\"\r\nimport Login from \"./components/Login\"\r\nimport Chat from \"./components/Chat\"\r\nimport Home from \"./components/Home\";\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Login\r\n    }\r\n]\r\n\r\nexport const privateRoutes = [\r\n    {\r\n        path: CHAT_ROUTE,\r\n        Component: Chat\r\n    }\r\n]\r\n","import React, {useContext} from 'react'\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\nimport {privateRoutes, publicRoutes} from \"../routes\";\r\nimport {CHAT_ROUTE, LOGIN_ROUTE} from \"../utils/consts\";\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst AppRouter = () => {\r\n    const {auth} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n\r\n    return user ?\r\n        <Switch>\r\n            {privateRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact={true}/>\r\n            )}\r\n            <Redirect to={CHAT_ROUTE} />\r\n        </Switch>\r\n        :\r\n        <Switch>\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact={true}/>\r\n            )}\r\n            <Redirect to={LOGIN_ROUTE} />\r\n        </Switch>\r\n}\r\n\r\nexport default AppRouter\r\n","import './App.css'\nimport Navbar from \"./components/Navbar\";\nimport {HashRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport Loader from \"./components/Loader\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {useContext} from \"react\";\nimport {Context} from \"./index\";\n\nfunction App() {\n    const {auth} = useContext(Context)\n    const [user, loader, error] = useAuthState(auth)\n\n    if (loader) {\n        return <Loader />\n    }\n\n    return (\n        <HashRouter>\n            <Navbar/>\n            <AppRouter/>\n        </HashRouter>\n    )\n}\n\nexport default App;\n","import React, {createContext} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport firebase from \"firebase\"\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyBpbPMLFA7wExzyxphf30ppEJusYv2dd_c\",\n    authDomain: \"react-chat-66a99.firebaseapp.com\",\n    projectId: \"react-chat-66a99\",\n    storageBucket: \"react-chat-66a99.appspot.com\",\n    messagingSenderId: \"918040955507\",\n    appId: \"1:918040955507:web:90e31caec7d66d7eab3806\"\n})\n\nexport const Context = createContext(null)\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nReactDOM.render(\n  <Context.Provider value={{\n      firebase,\n      auth,\n      firestore\n  }}>\n      <App />\n  </Context.Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}