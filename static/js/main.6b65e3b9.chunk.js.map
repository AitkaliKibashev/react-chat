{"version":3,"sources":["utils/consts.js","components/Navbar.js","components/Login.js","components/Loader.js","components/Chat.js","routes.js","components/AppRouter.js","App.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Navbar","auth","useContext","Context","useAuthState","user","tempUserState","TempUserContext","AppBar","position","Toolbar","Typography","variant","displayName","Grid","container","justifyContent","to","style","textDecoration","Button","onClick","a","signOut","localStorage","clear","color","Login","useState","value","setValue","loginWithGoogle","provider","firebase","GoogleAuthProvider","addScope","signInWithRedirect","Container","height","window","innerHeight","alignItems","width","background","Box","p","display","flexDirection","margin","className","TextField","onChange","e","target","rowsMax","label","size","setItem","location","reload","Loader","CircularProgress","withRouter","match","messageValue","setMessageValue","roomValue","setRoomValue","firestore","googleUser","roomId","params","useCollectionData","collection","orderBy","messages","rooms","marginTop","flex","map","r","id","name","add","Math","floor","random","uid","createdAt","FieldValue","serverTimestamp","m","Avatar","src","photoURL","marginRight","text","publicRoutes","path","Component","privateRoutes","Chat","AppRouter","component","exact","App","loader","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createContext","getItem","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.6b65e3b9.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login'\r\nexport const CHAT_ROUTE = '/chat/:roomId?'\r\n","import React, {useContext} from 'react'\r\nimport {AppBar, Button, Grid, Toolbar, Typography} from \"@material-ui/core\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {LOGIN_ROUTE} from \"../utils/consts\";\r\nimport {Context, TempUserContext} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst Navbar = () => {\r\n    const {auth} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n    const tempUserState = useContext(TempUserContext)\r\n\r\n    const logout = () => {\r\n        if (user) {\r\n            return async () => await auth.signOut()\r\n        }\r\n        localStorage.clear()\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\">\r\n                    {user || tempUserState.user.displayName ? 'Chat' : 'Home'}\r\n                </Typography>\r\n                <Grid container justifyContent={'flex-end'}>\r\n                    {user || tempUserState.user.displayName ?\r\n                        <NavLink to={LOGIN_ROUTE} style={{textDecoration: 'none'}}>\r\n                            <Button onClick={logout} variant={'contained'} color={'secondary'}>\r\n                                Logout\r\n                            </Button>\r\n                        </NavLink>\r\n                    :\r\n                        <NavLink to={LOGIN_ROUTE} style={{textDecoration: 'none'}}>\r\n                            <Button variant={'contained'} color={'secondary'}>\r\n                                Login\r\n                            </Button>\r\n                        </NavLink>\r\n                    }\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useContext, useState} from 'react'\r\nimport {Box, Button, Container, Grid, TextField} from \"@material-ui/core\";\r\nimport {Context} from \"../index\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Login = () => {\r\n    const {auth} = useContext(Context)\r\n    const [value, setValue] = useState('')\r\n\r\n    const loginWithGoogle = async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider()\r\n        provider.addScope('https://www.googleapis.com/auth/contacts.readonly')\r\n        await auth.signInWithRedirect(provider)\r\n    }\r\n\r\n    const createTempAcc = () => {\r\n        localStorage.setItem('name', value)\r\n        window.location.reload()\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                  style={{height: window.innerHeight - 65}}\r\n                  alignItems={'center'}\r\n                  justifyContent={'center'}\r\n            >\r\n                <Grid style={{width: 400, background: 'lightgray'}} container justifyContent={'center'} alignItems={'center'}>\r\n                    <Box p={5} style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center'\r\n                    }}>\r\n                        <Button onClick={loginWithGoogle} variant={'outlined'}>Login with Google</Button>\r\n                        <p style={{\r\n                            margin: '10px 0'\r\n                        }}>Or log in as a temporary user</p>\r\n                        <div className={'temp-user-block'}>\r\n                            <TextField\r\n                                value={value}\r\n                                onChange={(e) => setValue(e.target.value)}\r\n                                rowsMax={2}\r\n                                variant={'outlined'}\r\n                                color={'secondary'}\r\n                                label=\"Name\"\r\n                                style={{width: '70%'}}\r\n                                size={'small'}\r\n                            />\r\n                            <Button\r\n                                onClick={createTempAcc} variant={'outlined'} color={'secondary'}\r\n                            >Go</Button>\r\n                        </div>\r\n\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport {CircularProgress, Container, Grid} from \"@material-ui/core\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                  style={{height: window.innerHeight}}\r\n                  alignItems={'center'}\r\n                  justifyContent={'center'}\r\n            >\r\n                <Grid container justifyContent={'center'} alignItems={'center'}>\r\n                    <CircularProgress />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, {useContext, useState} from 'react'\r\nimport {Avatar, Button, Container, Grid, TextField} from \"@material-ui/core\"\r\nimport '../App.css'\r\nimport {Context, TempUserContext} from \"../index\"\r\nimport firebase from \"firebase\"\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\"\r\nimport Loader from \"./Loader\"\r\nimport {useAuthState} from \"react-firebase-hooks/auth\"\r\nimport {NavLink, withRouter} from \"react-router-dom\"\r\n\r\nconst Chat = ({match}) => {\r\n    const [messageValue, setMessageValue] = useState('')\r\n    const [roomValue, setRoomValue] = useState('')\r\n    const {auth, firestore} = useContext(Context)\r\n    const tempUserState = useContext(TempUserContext)\r\n    const [googleUser] = useAuthState(auth)\r\n    const user = googleUser ? googleUser : tempUserState.user\r\n    const roomId = match.params.roomId\r\n\r\n    const [messages] = useCollectionData(firestore.collection('messages').orderBy('createdAt'))\r\n    const [rooms, loading] = useCollectionData(firestore.collection('rooms').orderBy('createdAt'))\r\n\r\n    const sendMessage = () => {\r\n        const uid = user.uid\r\n        const displayName = user.displayName\r\n        const photoURL = user.photoURL\r\n\r\n        firestore.collection('messages').add({\r\n            roomId,\r\n            uid,\r\n            displayName,\r\n            photoURL,\r\n            text: messageValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setMessageValue('')\r\n    }\r\n\r\n    const createRoom = () => {\r\n        firestore.collection('rooms').add({\r\n            id: Math.floor(Math.random()*1000),\r\n            uid: user.uid,\r\n            name: roomValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setRoomValue('')\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 style={{marginTop: 10}}>Welcome to the my fucking CHAT</h1>\r\n            <div className={'chat-row'}>\r\n                <div style={{flex: 1}} className={'chat-row__chat-list'}>\r\n                    <h1>Rooms</h1>\r\n                    <div style={{flex: 1}}>\r\n                        {rooms ? rooms.map(r =>\r\n                            <NavLink style={{textDecoration: 'none'}} to={'/chat/' + r.id}>\r\n                                <p className={'chat-row__chat-list__item'}>{r.name}</p>\r\n                            </NavLink>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className={'chat-row__chat-list__footer'}>\r\n                        <TextField\r\n                            value={roomValue}\r\n                            onChange={(e) => setRoomValue(e.target.value)}\r\n                            rowsMax={2}\r\n                            variant={'outlined'}\r\n                            color={'secondary'}\r\n                            label=\"Room name\"\r\n                            style={{width: '65%'}}\r\n                        />\r\n                        <Button onClick={createRoom} variant={'outlined'} color={'secondary'}>Create</Button>\r\n                    </div>\r\n                </div>\r\n                <div className={'chat-row__chat-window'}>\r\n                    <div className={'chat-row__chat-window__chat'}>\r\n                        {messages ? messages.map(m =>\r\n                            roomId === m.roomId ?\r\n                            <div className={m.uid === user.uid ? 'chat-row__chat-window__user-message-me': 'chat-row__chat-window__user-message-other'}>\r\n                                <Grid container alignItems={'center'}>\r\n                                    <Avatar src={m.photoURL} style={{marginRight: 10}}/>\r\n                                    <p>{m.displayName}</p>\r\n                                </Grid>\r\n                                <p style={{marginTop: 5}}>{m.text}</p>\r\n                            </div> : null\r\n                        ) : null}\r\n                    </div>\r\n                    {roomId ?\r\n                        <div className={'chat-row__chat-window__footer'}>\r\n                            <TextField\r\n                                value={messageValue}\r\n                                onChange={(e) => setMessageValue(e.target.value)}\r\n                                rowsMax={2}\r\n                                variant={'outlined'}\r\n                                label={\"Your text\"}\r\n                                style={{width: '90%'}}\r\n                            />\r\n                            <Button onClick={sendMessage} variant={'outlined'} color={'secondary'}>Send</Button>\r\n                        </div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(Chat)\r\n","import {CHAT_ROUTE, LOGIN_ROUTE} from \"./utils/consts\"\r\nimport Login from \"./components/Login\"\r\nimport Chat from \"./components/Chat\"\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Login\r\n    }\r\n]\r\n\r\nexport const privateRoutes = [\r\n    {\r\n        path: CHAT_ROUTE,\r\n        Component: Chat\r\n    }\r\n]\r\n","import React, {useContext} from 'react'\r\nimport {Route, Switch, Redirect} from 'react-router-dom'\r\nimport {privateRoutes, publicRoutes} from \"../routes\";\r\nimport {CHAT_ROUTE, LOGIN_ROUTE} from \"../utils/consts\";\r\nimport {Context, TempUserContext} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst AppRouter = () => {\r\n    const {auth} = useContext(Context)\r\n    const tempUserState = useContext(TempUserContext)\r\n    const [user] = useAuthState(auth)\r\n\r\n    return user || tempUserState.user.displayName ?\r\n        <Switch>\r\n            {privateRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact={true}/>\r\n            )}\r\n            <Redirect to={CHAT_ROUTE} />\r\n        </Switch>\r\n        :\r\n        <Switch>\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact={true}/>\r\n            )}\r\n            <Redirect to={LOGIN_ROUTE} />\r\n        </Switch>\r\n}\r\n\r\nexport default AppRouter\r\n","import './App.css'\nimport Navbar from \"./components/Navbar\";\nimport {HashRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport Loader from \"./components/Loader\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {useContext} from \"react\";\nimport {Context} from \"./index\";\n\nfunction App() {\n    const {auth} = useContext(Context)\n    const [user, loader, error] = useAuthState(auth)\n\n    if (loader) {\n        return <Loader />\n    }\n\n    return (\n        <HashRouter>\n            <Navbar/>\n            <AppRouter/>\n        </HashRouter>\n    )\n}\n\nexport default App;\n","import React, {createContext} from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport firebase from \"firebase\"\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyBpbPMLFA7wExzyxphf30ppEJusYv2dd_c\",\n    authDomain: \"react-chat-66a99.firebaseapp.com\",\n    projectId: \"react-chat-66a99\",\n    storageBucket: \"react-chat-66a99.appspot.com\",\n    messagingSenderId: \"918040955507\",\n    appId: \"1:918040955507:web:90e31caec7d66d7eab3806\"\n})\n\nexport const Context = createContext(null)\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nexport const TempUserContext = createContext(null)\n\nconst tempUserState = {\n    user: {\n        uid: Math.floor(Math.random(1000) * 1000),\n        displayName: localStorage.getItem('name'),\n        photoURL: 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png'\n    }\n}\n\nReactDOM.render(\n  <Context.Provider value={{\n      firebase,\n      auth,\n      firestore\n  }}>\n      <TempUserContext.Provider value={tempUserState}>\n          <App />\n      </TempUserContext.Provider>\n  </Context.Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}